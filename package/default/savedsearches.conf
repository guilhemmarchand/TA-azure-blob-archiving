# savedsearches.conf

[Az2Blob - az2blob_table_summary Lookup gen]
cron_schedule = 1 * * * *
description = This scheduled report tracks for Azure table records to be inserted into the KVstore collection, an overlap of 30 minutes is used to limit risks of missing records
dispatch.earliest_time = -90m
dispatch.latest_time = now
enableSched = 1
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
dispatch.ttl = 300 # 5m ttl for this artefact
search = `az2blob_archive_root_search`\
| rex field=source "(?P<StorageAccount>[^:]+)\:\/\/(?<Table>.*)"\
| dedup StorageAccount, RowKey, PartitionKey\
| eval key=md5(StorageAccount . ":" . RowKey . ":" . PartitionKey)\
| table key StorageAccount, Table, PartitionKey, RowKey, Timestamp, blob_name, bucket_id, original_bucket_name, original_peer_name, original_peer_guid, epoch_start, epoch_end, indexname, size_bytes, clustered_flag, clustered_flag, status\
| outputlookup append=t key_field=key az2blob_table_summary\
| stats count as no_records

[Az2Blob - az2blob_table_summary Lookup update from Live]
cron_schedule = 11 * * * *
description = This scheduled reports uses the AzGetTable custom command to maintain records from the Splunk KVstore, it will update fields like the status of the blob
dispatch.earliest_time = -90m
dispatch.latest_time = now
enableSched = 1
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
dispatch.ttl = 300 # 5m ttl for this artefact
search = | azgettable [| rest splunk_server=local /servicesNS/nobody/TA-azure-blob-archiving/azure2blob_settings/azure2blob | table AZ_STORAGE_TABLE_NAME | rename AZ_STORAGE_TABLE_NAME as target_table | return target_table]  [| rest splunk_server=local /servicesNS/nobody/TA-azure-blob-archiving/azure2blob_settings/azure2blob | table AZ_BLOB_CONTAINER | rename AZ_BLOB_CONTAINER as partition_key | return partition_key] | spath\
| table PartitionKey RowKey blob_name bucket_id clustered_flag epoch_end epoch_start indexname original_bucket_name original_peer_guid original_peer_name size_bytes status\
\
| lookup local=t az2blob_table_summary RowKey OUTPUT _key as key, PartitionKey as KvPartitionKey | eval KvPartitionKey=mvjoin(KvPartitionKey, "|")\
| where isnotnull(key) AND KvPartitionKey=PartitionKey\
| outputlookup az2blob_table_summary append=t key_field=key\
\
| stats count as no_records

[Az2Blob - get AZ Table]
description = Az2Blob get AZ Table content
dispatch.earliest_time = -90m
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = `az2blob_archive_root_search`\
| rex field=source "(?P<StorageAccount>[^:]+)\:\/\/(?<Table>.*)"\
| dedup StorageAccount, RowKey, PartitionKey\
| eval key=md5(StorageAccount . ":" . RowKey . ":" . PartitionKey)\
| table key StorageAccount, PartitionKey, Table, RowKey, Timestamp, blob_name, bucket_id, original_bucket_name, original_peer_name, original_peer_guid, epoch_start, epoch_end, indexname, size_bytes, clustered_flag, clustered_flag, status\
| inputlookup append=t az2blob_table_summary | eval kvkey=_key\
| eval key=coalesce(key, kvkey)\
| dedup key\
| sort limit=0 StorageAccount, PartitionKey, Table, indexname, epoch_start\
| eval human_start=strftime(epoch_start, "%c"), human_end=strftime(epoch_end, "%c")\
| eval size_mb=round(size_bytes/1024/1024, 2)\
| table key StorageAccount, PartitionKey, Table, RowKey, Timestamp, blob_name, bucket_id, original_bucket_name, original_peer_name, original_peer_guid, epoch_start, human_start, epoch_end, human_end, indexname, size_mb, clustered_flag, clustered_flag, status\
| where status="success"\
| fields - key

[Az2Blob - AzFrozen2blob logs]
description = Shows the logs resulting from the main archiver process AzFrozen2Blob.py
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:azfrozen2blob"

[Az2Blob - AzRestore logs]
description = Shows the logs resulting from restore endpoint
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:restore"

[Az2Blob - AzRestoreBatch logs]
description = Shows the logs resulting from the custom command AzRestoreBatch
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:azrestorebatch"

[Az2Blob - AzExportTable logs]
description = Shows the logs resulting from the custom command AzExportTable.py
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:azexporttable"

[Az2Blob - AzPurgeBlob logs]
description = Shows the logs resulting from the custom command AzPurgeBlob.py
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:azpurgeblob"

[Az2Blob - azGetTable logs]
description = Shows the logs resulting from the custom command azGetTable.py
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype="azure2blob:azgettable"

[Az2Blob - BucketMover activity]
description = Shows Splunk internal BucketMover activity
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype=splunkd BucketMover

[Az2Blob - BucketMover errors]
description = Shows Splunk internal BucketMover errors
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype=splunkd BucketMover CASE(ERROR)

[Az2Blob - BucketMover bucket freezing activity]
description = Shows Splunk internal BucketMover bucket freezing activity
dispatch.earliest_time = -24h
dispatch.latest_time = now
request.ui_dispatch_app = TA-azure-blob-archiving
request.ui_dispatch_view = TA-azure-blob-archiving
search = index=_internal sourcetype=splunkd bucketmover freeze
